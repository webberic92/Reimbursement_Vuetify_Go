{"remainingRequest":"C:\\Users\\13864\\Desktop\\CDT\\PersonalStuff\\reimbursementAPP\\Reimbursement_Vuetify_Go\\vuetify_go_jwt_app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\13864\\Desktop\\CDT\\PersonalStuff\\reimbursementAPP\\Reimbursement_Vuetify_Go\\vuetify_go_jwt_app\\src\\views\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\13864\\Desktop\\CDT\\PersonalStuff\\reimbursementAPP\\Reimbursement_Vuetify_Go\\vuetify_go_jwt_app\\src\\views\\Dashboard.vue","mtime":1631625913694},{"path":"C:\\Users\\13864\\Desktop\\CDT\\PersonalStuff\\reimbursementAPP\\Reimbursement_Vuetify_Go\\vuetify_go_jwt_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630356888011},{"path":"C:\\Users\\13864\\Desktop\\CDT\\PersonalStuff\\reimbursementAPP\\Reimbursement_Vuetify_Go\\vuetify_go_jwt_app\\node_modules\\babel-loader\\lib\\index.js","mtime":1630356887823},{"path":"C:\\Users\\13864\\Desktop\\CDT\\PersonalStuff\\reimbursementAPP\\Reimbursement_Vuetify_Go\\vuetify_go_jwt_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630356888011},{"path":"C:\\Users\\13864\\Desktop\\CDT\\PersonalStuff\\reimbursementAPP\\Reimbursement_Vuetify_Go\\vuetify_go_jwt_app\\node_modules\\vue-loader\\lib\\index.js","mtime":1630356895121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <!-- BEGIN ADMIN STUFF -->\r\n  <div style=\"text-align: center\" v-if=\"this.$store.state.isAdmin\">\r\n    ADMIN STUFF HERE\r\n\r\n    <v-container class=\"grey lighten-5\" fill-height fluid>\r\n      <v-card class=\"pa-md-4 mx-lg-auto\" color=\"white\" width=\"auto\">\r\n        <p text-align: center>\r\n          <strong>\r\n            Welcome {{ this.firstName }}\r\n            <br />\r\n            <br />\r\n            You are currently logged in as a\r\n            {{ this.userType }} <br />\r\n          </strong>\r\n          <br />\r\n        </p>\r\n        <p v-if=\"ApproveOrDenyMessage\" text-align: center style=\"color:green\">\r\n          <strong>{{ ApproveOrDenyMessage }}</strong>\r\n        </p>\r\n        <!-- Get Open Reimbursements -->\r\n        <p v-if=\"loadOfOpenRequest\" text-align: center style=\"color:green\">\r\n\r\n\r\n\r\n        \r\n          <v-data-table :headers=\"adminCurrentHeaders\" :items=\"adminCurrent\">\r\n            <template v-slot:item=\"row\">\r\n              <tr>\r\n                <td>{{ row.item.RequestId }}</td>\r\n                <td>{{ row.item.userID }}</td>\r\n                <td>{{ row.item.title }}</td>\r\n                <td>{{ row.item.description }}</td>\r\n                <td>{{ row.item.amount }}</td>\r\n                <td>\r\n                  <v-btn\r\n                    color=\"success\"\r\n                    @click=\"approveOrDeny('A', row.item.RequestId)\"\r\n                    >Approve</v-btn\r\n                  >\r\n                </td>\r\n                <td>\r\n                  <v-btn\r\n                    color=\"error\"\r\n                    @click=\"approveOrDeny('D', row.item.RequestId)\"\r\n                    >Deny</v-btn\r\n                  >\r\n                </td>\r\n              </tr>\r\n            </template>\r\n          </v-data-table>\r\n        </p>\r\n        <!-- Get Open Reimbursements -->\r\n\r\n        <v-btn @click=\"getAllOpenRequests\">\r\n          Get All Open Requests.\r\n        </v-btn>\r\n        <br />\r\n        <br />\r\n        <v-btn @click=\"clearAdmin\">\r\n          Clear\r\n        </v-btn>\r\n      </v-card>\r\n    </v-container>\r\n  </div>\r\n  <!-- End ADMIN STUFF -->\r\n\r\n  <!-- Regular User Stuff -->\r\n  <div style=\"text-align: center\" v-else-if=\"!this.$store.state.isAdmin\">\r\n    REGULAR USER STUFF HERE\r\n\r\n    <v-container class=\"grey lighten-5\" fill-height fluid>\r\n      <v-card class=\"pa-md-4 mx-lg-auto\" color=\"white\" width=\"auto\">\r\n        <p>\r\n          <strong>\r\n            Welcome {{ this.firstName }}\r\n            <br />\r\n            <br />\r\n            You are currently logged in as a\r\n            {{ this.userType }} User <br />\r\n          </strong>\r\n          <br />\r\n        </p>\r\n\r\n        <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\r\n          <form @submit.prevent=\"submit\" id=\"myForm\">\r\n            <!-- Title   -->\r\n            <validation-provider\r\n              v-slot=\"{ errors }\"\r\n              name=\"Title\"\r\n              rules=\"required|max:20\"\r\n            >\r\n              <v-text-field\r\n                v-model=\"form.title\"\r\n                :counter=\"20\"\r\n                :error-messages=\"errors\"\r\n                label=\"Title\"\r\n                required\r\n              ></v-text-field>\r\n            </validation-provider>\r\n\r\n            <!-- Description   -->\r\n            <validation-provider\r\n              v-slot=\"{ errors }\"\r\n              name=\"Description\"\r\n              rules=\"required|max:200\"\r\n            >\r\n              <v-text-field\r\n                v-model=\"form.description\"\r\n                :counter=\"200\"\r\n                :error-messages=\"errors\"\r\n                label=\"Description\"\r\n                required\r\n              ></v-text-field>\r\n            </validation-provider>\r\n\r\n            <!-- Amount   -->\r\n\r\n            <validation-provider\r\n              v-slot=\"{ errors }\"\r\n              name=\"Reimbursment Amount\"\r\n              rules=\"required|digits_between:1,8\"\r\n            >\r\n              <v-text-field\r\n                v-model=\"form.amount\"\r\n                :error-messages=\"errors\"\r\n                label=\"Reimbursment Amount\"\r\n                required\r\n              ></v-text-field>\r\n            </validation-provider>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            <v-btn class=\"mr-4\" type=\"submit\" :disabled=\"invalid\">\r\n              submit\r\n            </v-btn>\r\n            <v-btn @click=\"clear\">\r\n              clear\r\n            </v-btn>\r\n          </form>\r\n        </validation-observer>\r\n        <br />\r\n        <v-btn @click=\"getOpenRequests\">\r\n          Get Current Requests.\r\n        </v-btn>\r\n        <br />\r\n        <br />\r\n        <!-- Messages -->\r\n        <p v-if=\"errorMessage\" text-align: center style=\"color:red\">\r\n          <strong>\r\n            {{ errorMessage }}\r\n          </strong>\r\n        </p>\r\n        <!-- New Reimbursment created table -->\r\n\r\n        <p v-if=\"createReimbursmentMessage\" text-align: center style=\"color:green\">\r\n          <strong>{{ createReimbursmentMessage }}</strong>\r\n          <v-data-table\r\n            v-if=\"this.submitted[0].rId != null\"\r\n            :headers=\"submittedHeaders\"\r\n            :items=\"submitted\"\r\n            :items-per-page=\"1\"\r\n            class=\"elevation-1\"\r\n          ></v-data-table>\r\n          <!-- New Reimbursment created table -->\r\n        </p>\r\n        <br />\r\n\r\n        <!-- Get Open Reimbursements -->\r\n        <p v-if=\"getReimbursementMessage\" text-align: center style=\"color:green\">\r\n          <strong>{{ getReimbursementMessage }}</strong>\r\n          <v-data-table\r\n            :headers=\"currentHeaders\"\r\n            :items=\"current\"\r\n            :items-per-page=\"10\"\r\n            class=\"elevation-1\"\r\n          >\r\n          </v-data-table>\r\n          <!-- Get Open Reimbursements -->\r\n        </p>\r\n      </v-card>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\n\r\nimport store from \"..//store/index\";\r\nimport { required, digits, max, regex, min, numeric} from \"vee-validate/dist/rules\";\r\nimport {\r\n  extend,\r\n  validate,\r\n  ValidationObserver,\r\n  ValidationProvider,\r\n  setInteractionMode,\r\n} from \"vee-validate\";\r\n\r\nsetInteractionMode(\"eager\");\r\n\r\nextend(\"digits\", {\r\n  ...digits,\r\n  message: \"{_field_} needs to be {length} digits. ({_value_})\",\r\n});\r\n\r\nextend(\"required\", {\r\n  ...required,\r\n  message: \"{_field_} can not be empty\",\r\n});\r\n\r\nextend(\"max\", {\r\n  ...max,\r\n  message: \"{_field_} may not be greater than {length} characters\",\r\n});\r\n\r\nextend(\"regex\", {\r\n  ...regex,\r\n  message: \"{_field_} {_value_} does not match {regex}\",\r\n});\r\n\r\nextend(\"min\", min);\r\nextend(\"max\", max);\r\nextend(\"numeric\", numeric);\r\n\r\nextend(\"digits_between\", {\r\n  async validate(value, { min, max }) {\r\n    const res = await validate(value, `numeric|min:${min}|max:${max}`);\r\n    return res.valid;\r\n  },\r\n  params: [\"min\", \"max\"],\r\n  message: \"The {_field_} must be between {min} and {max} digits\",\r\n});\r\n\r\nexport default {\r\n  components: {\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n  },\r\n  created() {\r\n    Axios.get(\"http://localhost:8000/api/user\", {\r\n      withCredentials: true,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(async (response) => {\r\n        if (!response.ok) {\r\n          this.form.userId = response.data.id;\r\n          store.commit(\"setUserId\", this.form.userId);\r\n          this.firstName = response.data.firstName;\r\n          if (response.data.userType == \"R\") {\r\n            this.userType = \"Regular\";\r\n          } else if (response.data.userType == \"A\") {\r\n            this.userType = \"Admin\";\r\n            store.commit(\"makeUserAdmin\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        this.$router.push(\"/\");\r\n      });\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      form: {\r\n        userId: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        amount: \"\",\r\n      },\r\n      firstName: \"\",\r\n      userType: \"\",\r\n      errorMessage: \"\",\r\n      createReimbursmentMessage: \"\",\r\n      ApproveOrDenyMessage: \"\",\r\n      loadOfOpenRequest: false,\r\n      getReimbursementMessage: \"\",\r\n      submittedHeaders: [\r\n        {\r\n          text: \"Reimbursment ID\",\r\n          align: \"start\",\r\n          sortable: false,\r\n          value: \"rId\",\r\n        },\r\n        { text: \"Requestor\", value: \"requestor\" },\r\n        { text: \"Title\", value: \"title\" },\r\n        { text: \"Description\", value: \"description\" },\r\n        { text: \"Amount\", value: \"amount\" },\r\n      ],\r\n      submitted: [\r\n        {\r\n          rId: null,\r\n          requestor: null,\r\n          title: \"\",\r\n          description: \"\",\r\n          amount: null,\r\n        },\r\n      ],\r\n      currentHeaders: [\r\n        {\r\n          text: \"Reimbursment ID\",\r\n          align: \"start\",\r\n          sortable: false,\r\n          value: \"RequestId\",\r\n        },\r\n        { text: \"Requestor\", value: \"userID\" },\r\n        { text: \"Title\", value: \"title\" },\r\n        { text: \"Description\", value: \"description\" },\r\n        { text: \"Amount\", value: \"amount\" },\r\n      ],\r\n      current: [\r\n        {\r\n          RequestId: null,\r\n          userID: null,\r\n          title: \"\",\r\n          description: \"\",\r\n          amount: null,\r\n        },\r\n      ],\r\n      adminCurrentHeaders: [\r\n        {\r\n          text: \"Reimbursment ID\",\r\n          align: \"start\",\r\n          sortable: false,\r\n          value: \"RequestId\",\r\n        },\r\n        { text: \"Requestor\", value: \"userID\" },\r\n        { text: \"Title\", value: \"title\" },\r\n        { text: \"Description\", value: \"description\" },\r\n        { text: \"Amount\", value: \"amount\" },\r\n        { text: \"Approve\" },\r\n        { text: \"Deny\" },\r\n      ],\r\n      adminCurrent: [\r\n        {\r\n          RequestId: null,\r\n          userID: null,\r\n          title: \"\",\r\n          description: \"\",\r\n          amount: null,\r\n          approveOrDeny: \"\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    clear() {\r\n      this.submitted[0].rId = null;\r\n      this.submitted[0].requestor = null;\r\n      this.submitted[0].title = \"\";\r\n      this.submitted[0].description = \"\";\r\n      this.submitted[0].amount = null;\r\n      this.createReimbursmentMessage = \"\";\r\n      this.errorMessage = \"\";\r\n      document.getElementById(\"myForm\").reset();\r\n      this.getReimbursementMessage = \"\";\r\n    },\r\n    clearAdmin() {\r\n      this.adminCurrent = [];\r\n      this.ApproveOrDenyMessage = \"\";\r\n      this.loadOfOpenRequest = false;\r\n    },\r\n    submit() {\r\n      this.form.userId = this.form.userId.toString();\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8000/api/createReimbursment\",\r\n        data: this.form,\r\n        withCredentials: true,\r\n      })\r\n        .then(async (response) => {\r\n          this.errorMessage = \"\";\r\n          this.submitted[0].rId = response.data.RequestId;\r\n          this.submitted[0].requestor = response.data.userID;\r\n          this.submitted[0].title = response.data.title;\r\n          this.submitted[0].description = response.data.description;\r\n          this.submitted[0].amount = \"$\" + response.data.amount;\r\n          this.createReimbursmentMessage =\r\n            \"You successfully created a new Reimbursment Request.\";\r\n          document.getElementById(\"myForm\").reset();\r\n        })\r\n\r\n        .catch((error) => {\r\n          console.log(error.response.data.message);\r\n          this.errorMessage = error.response.data.message;\r\n          this.createReimbursmentMessage = \"\";\r\n        });\r\n    },\r\n    getOpenRequests() {\r\n      this.current = [];\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8000/api/getReimbursments\",\r\n        withCredentials: true,\r\n      })\r\n        .then(async (response) => {\r\n          for (var x of response.data) {\r\n            x.amount = \"$\" + x.amount;\r\n\r\n            this.current.push(x);\r\n          }\r\n          this.createReimbursmentMessage = \"\";\r\n          this.getReimbursementMessage =\r\n            \"You successfully loaded  all Reimbursment Requests.\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          this.errorMessage = error.response;\r\n          this.successMessage = \"\";\r\n        });\r\n    },\r\n    getAllOpenRequests() {\r\n      this.adminCurrent = [];\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8000/api/getAllOpenReimbursments\",\r\n        withCredentials: true,\r\n      })\r\n        .then(async (response) => {\r\n          for (var x of response.data) {\r\n            x.amount = \"$\" + x.amount;\r\n\r\n            this.adminCurrent.push(x);\r\n          }\r\n          this.loadOfOpenRequest = true\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          this.errorMessage = error.response;\r\n        });\r\n    },\r\n    approveOrDeny(approveOrDeny, requestId) {\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8000/api/approveOrDeny\",\r\n        withCredentials: true,\r\n        data: {\r\n          requestId: requestId.toString(),\r\n          approveOrDeny: approveOrDeny,\r\n        },\r\n      })\r\n        .then(async (response) => {\r\n          if (response.data.approvalStatus == \"A\") {\r\n            this.ApproveOrDenyMessage =\r\n              \"You successfully approved Reimbursment Requests #\" + response.data.RequestId;\r\n          } else {\r\n            this.ApproveOrDenyMessage =\r\n              \"You successfully denied Reimbursment Requests #\" + response.data.RequestId;\r\n          }\r\n         this.getAllOpenRequests()\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          this.ApproveOrDenyMessage = error;\r\n        });\r\n        \r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}